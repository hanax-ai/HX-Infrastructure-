name: HX CI — Comprehensive Quality Gates

on:
  push:
    branches: [ "**" ]
  pull_request:
    branches: [ "**" ]

permissions:
  contents: read

jobs:
  lint-validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y yamllint shellcheck jq curl

      - name: Install Python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install ruff black mypy types-requests

      - name: Install gateway dependencies
        run: |
          cd api-gateway/gateway
          pip install -r requirements.lock

      - name: YAML lint (fallback to default rules if no config)
        run: |
          if [ -f ".yamllint.yaml" ] || [ -f ".yamllint.yml" ]; then
            yamllint -s -c .yamllint.yaml . 2>/dev/null || \
            yamllint -s -c .yamllint.yml .
          else
            yamllint -s .
          fi

      - name: Shellcheck (Bash scripts)
        shell: bash
        run: |
          shopt -s globstar nullglob
          files=(**/*.sh)
          if [ ${#files[@]} -gt 0 ]; then
            shellcheck "${files[@]}"
          else
            echo "No shell scripts to lint."
          fi

      - name: Python lint (ruff)
        run: |
          cd api-gateway/gateway
          python -m ruff check src/ tests/ --config ../../ruff.toml

      - name: Python formatting (black)
        run: |
          cd api-gateway/gateway  
          python -m black --check --line-length 120 src/ tests/

      - name: Type checking (mypy)
        run: |
          cd api-gateway/gateway
          python -m mypy src/ --config-file ../../pyproject.toml || echo "⚠️ Type checking completed with warnings"

      - name: Path hygiene — no references to old Dev-Test root
        run: |
          if grep -RIl --exclude-dir=.git "/opt/HX-Dev-Test-Infrastructure" . >/dev/null 2>&1; then
            echo "ERROR: Found stale path references to /opt/HX-Dev-Test-Infrastructure"
            echo "These must be replaced with /opt/HX-Infrastructure-"
            grep -RIl --exclude-dir=.git "/opt/HX-Dev-Test-Infrastructure" .
            exit 1
          else
            echo "OK: no stale Dev-Test path references."
          fi

      - name: Required files present
        run: |
          test -d ".github" || { echo ".github directory missing"; exit 1; }
          test -f ".github/copilot-instructions.md" || { echo "Missing .github/copilot-instructions.md"; exit 1; }
          echo "Required files present."

  test-suite:
    runs-on: ubuntu-latest
    needs: lint-validate
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          cd api-gateway/gateway
          pip install -r requirements.lock

      - name: Run test suite
        run: |
          cd api-gateway
          PYTHONPATH=. python -m pytest tests/ -v

      - name: Run contract tests
        run: |
          cd api-gateway
          PYTHONPATH=. python -m pytest -q -k "route_" tests/

      - name: Test environment hygiene
        run: |
          cd api-gateway
          PYTHONPATH=. python -m pytest tests/test_env_hygiene.py -v

      - name: OpenAPI regression guard
        run: |
          cd api-gateway
          PYTHONPATH=. python -m pytest tests/test_openapi_regression.py -v
